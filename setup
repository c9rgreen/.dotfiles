#!/usr/bin/env python3

# Configuration lives in config.ini

import configparser
from os import symlink
from pathlib import Path
from subprocess import Popen
import argparse

parser = argparse.ArgumentParser(
    prog="Local development setup utility",
    description="Set up a local development environment with dotfiles, Node modules, and Python packages.",
)

parser.add_argument("--dotfiles", action="store_true", help="Symlink dotfiles to $HOME")
parser.add_argument("--npm", action="store_true", help="Install global NPM packages")
parser.add_argument("--pip", action="store_true", help="Install global Python packages")

args = parser.parse_args()

config = configparser.ConfigParser(allow_no_value=True)
config.read("config.ini")

# Install node modules
if args.npm:
    for node_module in config["NPM"]:
        print(f"Installing {node_module}")
        npm = Popen(["npm", "install", "--global", node_module.strip()])

# Install Python packages
if args.pip:
    for pkg in config["Pip"]:
        print(f"Installing {pkg}")
        pip = Popen(["pip3", "install", "--user", pkg.strip()])

# Symlink dotfiles
if args.dotfiles:
    home = Path.home()
    for item in config["Dotfiles"]:
        item = item.strip()

        src = f"{home}/.dotfiles/{item}"
        dst = f"{home}/{item}"

        if Path(dst).is_symlink():
            print(f"{src}: symlink already exists")
        else:
            print(f"Linking {src} -> {dst}")
            symlink(src, dst)
